{"version":3,"file":"27-query-management.js","sourceRoot":"","sources":["../../src/test/27-query-management.ts"],"names":[],"mappings":"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","sourcesContent":["import { expect } from \"chai\";\nimport { aql } from \"../aql\";\nimport { ArrayCursor } from \"../cursor\";\nimport { Database } from \"../database\";\nimport { ArangoError } from \"../error\";\n\nconst ARANGO_URL = process.env.TEST_ARANGODB_URL || \"http://localhost:8529\";\nconst ARANGO_VERSION = Number(\n  process.env.ARANGO_VERSION || process.env.ARANGOJS_DEVEL_VERSION || 30400\n);\n\ndescribe(\"Query Management API\", function () {\n  const dbName = `testdb_${Date.now()}`;\n  let db: Database;\n  before(async () => {\n    db = new Database({ url: ARANGO_URL, arangoVersion: ARANGO_VERSION });\n    await db.createDatabase(dbName);\n    db.useDatabase(dbName);\n  });\n  after(async () => {\n    try {\n      db.useDatabase(\"_system\");\n      await db.dropDatabase(dbName);\n    } finally {\n      db.close();\n    }\n  });\n\n  describe(\"database.query\", () => {\n    it(\"returns a cursor for the query result\", (done) => {\n      db.query(\"RETURN 23\")\n        .then((cursor) => {\n          expect(cursor).to.be.an.instanceof(ArrayCursor);\n          done();\n        })\n        .catch(done);\n    });\n    it(\"throws an exception on error\", async () => {\n      try {\n        await db.query(\"FOR i IN no RETURN i\");\n      } catch (err) {\n        expect(err).is.instanceof(ArangoError);\n        expect(err).to.have.property(\"code\", 404);\n        expect(err).to.have.property(\"errorNum\", 1203);\n        return;\n      }\n      expect.fail();\n    });\n    it(\"times out if a timeout is set and exceeded\", async () => {\n      try {\n        await db.query(aql`RETURN SLEEP(0.02)`, { timeout: 10 });\n      } catch (err) {\n        expect(err).is.instanceof(Error);\n        expect(err).is.not.instanceof(ArangoError);\n        expect(err).to.have.property(\"code\", \"ECONNRESET\");\n        return;\n      }\n      expect.fail();\n    });\n    it(\"does not time out if a timeout is set and not exceeded\", async () => {\n      try {\n        await db.query(aql`RETURN SLEEP(0.01)`, { timeout: 1000 });\n      } catch (err) {\n        expect.fail();\n      }\n    });\n    it(\"supports bindVars\", async () => {\n      const cursor = await db.query(\"RETURN @x\", { x: 5 });\n      const value = await cursor.next();\n      expect(value).to.equal(5);\n    });\n    it(\"supports options\", async () => {\n      const cursor = await db.query(\"FOR x IN 1..10 RETURN x\", undefined, {\n        batchSize: 2,\n        count: true,\n      });\n      expect(cursor.count).to.equal(10);\n      expect((cursor as any).batches.hasMore).to.equal(true);\n    });\n    it(\"supports AQB queries\", async () => {\n      const cursor = await db.query({ toAQL: () => \"RETURN 42\" });\n      const value = await cursor.next();\n      expect(value).to.equal(42);\n    });\n    it(\"supports query objects\", async () => {\n      const cursor = await db.query({ query: \"RETURN 1337\", bindVars: {} });\n      const value = await cursor.next();\n      expect(value).to.equal(1337);\n    });\n    it(\"supports compact queries\", async () => {\n      const cursor = await db.query({\n        query: \"RETURN @potato\",\n        bindVars: { potato: \"tomato\" },\n      });\n      const value = await cursor.next();\n      expect(value).to.equal(\"tomato\");\n    });\n    it(\"supports compact queries with options\", async () => {\n      const query: any = {\n        query: \"FOR x IN RANGE(1, @max) RETURN x\",\n        bindVars: { max: 10 },\n      };\n      const cursor = await db.query(query, { batchSize: 2, count: true });\n      expect(cursor.count).to.equal(10);\n      expect((cursor as any).batches.hasMore).to.equal(true);\n    });\n  });\n\n  describe(\"database.explain\", () => {\n    it(\"returns an explanation\", async () => {\n      const result = await db.explain(aql`FOR x IN RANGE(1, ${10}) RETURN x`);\n      expect(result.plan).to.have.property(\"nodes\");\n    });\n  });\n\n  describe(\"database.parse\", () => {\n    it(\"returns a parse result\", async () => {\n      const result = await db.parse(aql`FOR x IN _users RETURN x`);\n      expect(result).to.have.property(\"parsed\", true);\n      expect(result).to.have.property(\"collections\");\n      expect(result).to.have.property(\"bindVars\");\n      expect(result).to.have.property(\"ast\");\n    });\n  });\n\n  describe(\"database.queryTracking\", () => {\n    it(\"returns the AQL query tracking properties\", async () => {\n      const result = await db.queryTracking();\n      expect(result).to.have.property(\"enabled\");\n      expect(result).to.have.property(\"maxQueryStringLength\");\n      expect(result).to.have.property(\"maxSlowQueries\");\n      expect(result).to.have.property(\"slowQueryThreshold\");\n      expect(result).to.have.property(\"trackBindVars\");\n      expect(result).to.have.property(\"trackSlowQueries\");\n    });\n  });\n\n  describe(\"database.queryTracking\", () => {\n    afterEach(async () => {\n      await db.queryTracking({\n        enabled: true,\n        slowQueryThreshold: 5,\n      });\n      await db.clearSlowQueries();\n    });\n    it(\"returns the AQL query tracking properties\", async () => {\n      const result = await db.queryTracking({\n        enabled: true,\n        maxQueryStringLength: 64,\n        maxSlowQueries: 2,\n        slowQueryThreshold: 5,\n        trackBindVars: true,\n        trackSlowQueries: true,\n      });\n      expect(result).to.have.property(\"enabled\", true);\n      expect(result).to.have.property(\"maxQueryStringLength\", 64);\n      expect(result).to.have.property(\"maxSlowQueries\", 2);\n      expect(result).to.have.property(\"slowQueryThreshold\", 5);\n      expect(result).to.have.property(\"trackBindVars\", true);\n      expect(result).to.have.property(\"trackSlowQueries\", true);\n    });\n  });\n\n  describe(\"database.listRunningQueries\", () => {\n    it(\"returns a list of running queries\", async () => {\n      const query = \"RETURN SLEEP(0.5)\";\n      const p1 = db.query(query);\n      const queries = await db.listRunningQueries();\n      expect(queries).to.have.lengthOf(1);\n      expect(queries[0]).to.have.property(\"bindVars\");\n      expect(queries[0]).to.have.property(\"query\", query);\n      await p1;\n    });\n  });\n\n  describe(\"database.listSlowQueries\", () => {\n    beforeEach(async () => {\n      await db.queryTracking({\n        enabled: true,\n        slowQueryThreshold: 0.1,\n        trackSlowQueries: true,\n      });\n      await db.clearSlowQueries();\n    });\n    afterEach(async () => {\n      await db.queryTracking({\n        enabled: true,\n        slowQueryThreshold: 5,\n      });\n      await db.clearSlowQueries();\n    });\n    it(\"returns a list of slow queries\", async () => {\n      const query = \"RETURN SLEEP(0.2)\";\n      await db.query(query);\n      const queries = await db.listSlowQueries();\n      expect(queries).to.have.lengthOf(1);\n      expect(queries[0]).to.have.property(\"query\", query);\n    });\n  });\n\n  describe(\"database.clearSlowQueries\", () => {\n    beforeEach(async () => {\n      await db.queryTracking({\n        enabled: true,\n        slowQueryThreshold: 0.1,\n        trackSlowQueries: true,\n      });\n      await db.clearSlowQueries();\n    });\n    afterEach(async () => {\n      await db.queryTracking({\n        enabled: true,\n        slowQueryThreshold: 5,\n      });\n      await db.clearSlowQueries();\n    });\n    it(\"clears the list of slow queries\", async () => {\n      await db.query(\"RETURN SLEEP(0.2)\");\n      const queries1 = await db.listSlowQueries();\n      expect(queries1).to.have.lengthOf(1);\n      await db.clearSlowQueries();\n      const queries2 = await db.listSlowQueries();\n      expect(queries2).to.have.lengthOf(0);\n    });\n  });\n\n  // FIXME rewrite this test to use async mode to eliminate the timing\n  // dependence. This test is flakey on Jenkins otherwise.\n  describe.skip(\"database.killQuery\", () => {\n    it(\"kills the given query\", async () => {\n      const query = \"RETURN SLEEP(5)\";\n      const p1 = db.query(query);\n      const queries = await db.listRunningQueries();\n      expect(queries).to.have.lengthOf(1);\n      expect(queries[0]).to.have.property(\"bindVars\");\n      expect(queries[0]).to.have.property(\"query\", query);\n      await db.killQuery(queries[0].id);\n      try {\n        await p1;\n      } catch (e) {\n        expect(e).to.be.instanceOf(ArangoError);\n        expect(e).to.have.property(\"errorNum\", 1500);\n        expect(e).to.have.property(\"code\", 410);\n        return;\n      }\n      expect.fail();\n    });\n  });\n});\n"]}