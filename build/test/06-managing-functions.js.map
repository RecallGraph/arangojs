{"version":3,"file":"06-managing-functions.js","sourceRoot":"","sources":["../../src/test/06-managing-functions.ts"],"names":[],"mappings":"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","sourcesContent":["import { expect } from \"chai\";\nimport { Database } from \"../database\";\n\nconst ARANGO_URL = process.env.TEST_ARANGODB_URL || \"http://localhost:8529\";\nconst ARANGO_VERSION = Number(\n  process.env.ARANGO_VERSION || process.env.ARANGOJS_DEVEL_VERSION || 30400\n);\nconst it34 = ARANGO_VERSION >= 30400 ? it : it.skip;\n\ndescribe(\"Managing functions\", function () {\n  const name = `testdb_${Date.now()}`;\n  let db: Database;\n  before(async () => {\n    db = new Database({ url: ARANGO_URL, arangoVersion: ARANGO_VERSION });\n    await db.createDatabase(name);\n    db.useDatabase(name);\n  });\n  after(async () => {\n    try {\n      db.useDatabase(\"_system\");\n      await db.dropDatabase(name);\n    } finally {\n      db.close();\n    }\n  });\n  describe(\"database.listFunctions\", () => {\n    it34(\"should be empty per default\", async () => {\n      const result = await db.listFunctions();\n      expect(result).to.be.instanceof(Array);\n      expect(result).to.be.empty;\n    });\n    it34(\"should include before created function\", async () => {\n      const name = \"myfunctions::temperature::celsiustofahrenheit\";\n      const code = \"function (celsius) { return celsius * 1.8 + 32; }\";\n      await db.createFunction(name, code);\n      const result = await db.listFunctions();\n      expect(result).to.be.instanceof(Array);\n      expect(result.length).to.equal(1);\n      expect(result[0]).to.eql({\n        name,\n        code,\n        isDeterministic: false,\n      });\n    });\n    describe(\"database.createFunction\", () => {\n      it(\"should create a function\", async () => {\n        const info = await db.createFunction(\n          \"myfunctions::temperature::celsiustofahrenheit2\",\n          \"function (celsius) { return celsius * 1.8 + 32; }\"\n        );\n        expect(info).to.have.property(\"code\", 201);\n        expect(info).to.have.property(\"error\", false);\n      });\n    });\n    describe(\"database.dropFunction\", () => {\n      it(\"should drop a existing function\", async () => {\n        const name = \"myfunctions::temperature::celsiustofahrenheit\";\n        await db.createFunction(\n          name,\n          \"function (celsius) { return celsius * 1.8 + 32; }\"\n        );\n        const info = await db.dropFunction(name);\n        if (ARANGO_VERSION >= 30400)\n          expect(info).to.have.property(\"deletedCount\", 1);\n      });\n    });\n  });\n});\n"]}